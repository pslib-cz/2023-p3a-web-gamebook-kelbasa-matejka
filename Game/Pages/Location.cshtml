@page
@using Game.Services;
@model Game.Pages.Location
@{

}

<div class="location" style="background-image: url(Assets/@Model.lModel.Background);">
    <h1>@Model.lModel.Name</h1>
    <p>@Model.lModel.Description</p>
    <div>
        <h2>Player: </h2>
        <p>Player has @Model.pModel.Hp HP</p>
        <p>Player deals @Model.pModel.Damage DMG</p>
        <p>Player energy: @Model.pModel.Energy</p>
        <p>Player is in location #@Model.pModel.CurrentLocationId</p>
        <p>Players inventory: </p>
        @if (Model.pModel.Items != null) {
        <ul>
            
        @foreach(var item in Model.pModel.Items)
        {
            <li>@item.Name - @item.Description</li>
        }
        </ul>
        }
    </div>
	@if (Model.lModel.Enemy != null)
	{
        <h2>@Model.lModel.Enemy.Name</h2>
        <h2>@Model.lModel.Enemy.Hp hp</h2>
	}
    @if (Model.lModel.PuzzleKey != null)
    {
        @await Html.PartialAsync("PuzzleForm", Model);
    }
    @foreach(var v in Model.lModel.Connections)
    {
        <div>
            <p>@v.Description <a asp-page="Location" asp-route-id="@v.ToLocationID">-></a>
                @if (v.Locked){
                    <span style ="color: red;" >LOCKED</span>
                }
                @if (v.RequiredItem != null)
                {
                    if (Model.pModel.Items != null && Model.pModel.Items.Count(a => a.ID == v.RequiredItem.ID) > 0)
                    {
                        <span>@v.RequiredItem.Name is required (you have it)</span>
                    }
                    else
                    {
                        <span style="color: red;">@v.RequiredItem.Name is required</span>
                    }
                    
                }
            </p>
        </div>   
    }
</div>
<script src="/_framework/aspnetcore-browser-refresh.js"></script>