@page
@using Game.Services;
@model Game.Pages.Location
@{
    ViewData["Title"] = Model.lModel.Name;
}

<main class="location" style="background-image: url(Assets/LocationsBg/@Model.lModel.Background);">
    <div class="cont">
        <h1>@Model.lModel.Name</h1>
        <p>@Model.lModel.Description</p>    
    </div>
    

    @if (Model.lModel.Enemy != null)
    {
        @await Html.PartialAsync("Combat", Model)
    }
    @if (Model.lModel.PuzzleKey != null)
    {
        @await Html.PartialAsync("PuzzleForm", Model)
    }
    @if (Model.lModel.Items != null && Model.lModel.Items.Count > 0)
    {
        @await Html.PartialAsync("Items", Model)
    }

    <section class="cont">
        <h2>Player: </h2>
        <p>Player has @Model.pModel.Hp HP</p>
        <p>Player deals @Model.pModel.Damage DMG</p>
        <p>Player energy: @Model.pModel.Energy</p>
        <p>Player is in location #@Model.pModel.CurrentLocationId</p>
        <p>Players inventory: </p>
        @if (Model.pModel.Items != null)
        {
            <ul>
                @foreach (var item in Model.pModel.Items)
                {
                    <li>
                        <span>@item.Name - @item.Description</span>
                        @if (item.Usable)
                        {
                            <form method="post">
                                <input hidden name="ItemID" value="@item.ID" />
                                <button type="submit" asp-page-handler="UseItem">Use</button>
                            </form>
                        }
                    </li>
                }
            </ul>
        }
    </section>
    @foreach (var v in Model.lModel.Connections)
    {
        <section class="location__signpost">
            <p>@v.Description <a asp-page="Location" asp-route-id="@v.ToLocationID">-></a>
                @if (v.Locked)
                {
                    <span style="color: red;">LOCKED</span>
                }
                @if (v.RequiredItem != null)
                {
                    if (Model.pModel.Items != null && Model.pModel.Items.Count(a => a.ID == v.RequiredItem.ID) > 0)
                    {
                        <span>@v.RequiredItem.Name is required (you have it)</span>
                    }
                    else
                    {
                        <span style="color: red;">@v.RequiredItem.Name is required</span>
                    }

                }
            </p>
        </section>
    }

    
</main>
<script src="/_framework/aspnetcore-browser-refresh.js"></script>